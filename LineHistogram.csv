1;0;"	def type TArray8x8 as array[1 .. 8] of array[1 .. 8] of integer;"
2;0;"	def type TPoint2D as record"
3;0;"	       x as integer;"
4;0;"	       y as integer;"
5;0;"	     end;"
6;0;"	def type TPiece as record"
7;0;"	                     figtype as integer;"
8;0;"	                     note as integer;"
9;0;"	                     pos as TPoint2D;"
10;0;"	                     attacked_cells as integer;   {kolko policok ohrozuje}"
11;0;"	                     attacked_weight as float;  {sila nepriatelskych figur, ktore ohrozuje}"
12;0;"	                   end;"
13;0;"	"
14;0;"	def type Position as record"
15;0;"	                       onmove as integer;"
16;0;"	                       movenr as integer;"
17;0;"	                       gama as float;"
18;0;"	                       name as string;"
19;0;"	                       board as TArray8x8;"
20;0;"	                       attacked as TArray8x8;"
21;0;"	                       pieces as array[-16 .. 16] of TPiece;"
22;0;"	                     end;"
23;0;"	"
24;0;"	def gp as Position;"
25;0;"	def piece_name as array[1 .. 6] of string;"
26;0;"	def color_name as array[-1 .. 1] of string;"
27;0;"	def piece_weight as array[1 .. 6] of float;"
28;0;"	def pieces_weight as float;"
29;0;"	def pawn_weight as float;"
30;0;"	def attack_weight as float;"
31;0;"	def border as array[-1 .. 1] of integer;"
32;0;"	def movescount as array[2 .. 6] of integer;"
33;0;"	def moverel as array[2 .. 6] of array [1 .. 8] of TPoint2D;"
34;0;"	def fig2bit as array[-16 .. 16] of integer;"
35;0;"	def color2bit as array[-1 .. 1] of integer;"
36;0;"	def Part as integer;"
37;0;"	def FirstPart as string;"
38;0;"	def drawMoves as bool;"
39;0;"	def addRandomWeight as float;"
40;0;"	"
41;0;"	{""constants"" for figure type}"
42;0;"	def pawn as integer;"
43;0;"	def bishop as integer;"
44;0;"	def knight as integer;"
45;0;"	def rook as integer;"
46;0;"	def queen as integer;"
47;0;"	def king as integer;"
48;0;"	"
49;0;"	def proc InitVars;"
50;0;"	"
51;0;"	  def i as integer;"
52;0;"	  def bit2 as array [0 .. 31] of integer;"
53;0;"	"
54;0;"	  {compute values representing single bits from 0 to 31}"
55;1;"	  bit2[0]:=1;"
56;1;"	  for i:=0 to 29 do"
57;30;"	    bit2[i+1]:=bit2[i]+bit2[i];"
58;0;"	  end for;"
59;1;"	  bit2[31]:=(0-bit2[30])-bit2[30];"
60;0;"	"
61;1;"	  for i:=1 to 16 do"
62;16;"	    fig2bit[i]:=bit2[i-1];"
63;16;"	    fig2bit[-i]:=bit2[i+15];"
64;16;"	    color2bit[1]:=color2bit[1] or fig2bit[i];"
65;16;"	    color2bit[-1]:=color2bit[-1] or fig2bit[-i];"
66;0;"	  end for;"
67;0;"	"
68;0;"	  {this sorting is needed for optimization .. for tests if fig is bishop or rook or queen}"
69;1;"	  pawn:=1;"
70;1;"	  knight:=2;"
71;1;"	  king:=3;"
72;1;"	  bishop:=4;"
73;1;"	  rook:=5;"
74;1;"	  queen:=6;"
75;0;"	"
76;1;"	  piece_weight[pawn  ]:=1;"
77;1;"	  piece_weight[bishop]:=2.8;"
78;1;"	  piece_weight[knight]:=3;"
79;1;"	  piece_weight[rook  ]:=5;"
80;1;"	  piece_weight[queen ]:=10;"
81;1;"	  piece_weight[king  ]:=20;"
82;1;"	  pieces_weight:=8;"
83;1;"	  pawn_weight:=1;"
84;1;"	  attack_weight:=1.4;"
85;0;"	"
86;1;"	  addRandomWeight:=0.5;"
87;0;"	"
88;1;"	  piece_name[pawn  ]:=""p"";"
89;1;"	  piece_name[bishop]:=""s"";"
90;1;"	  piece_name[knight]:=""j"";"
91;1;"	  piece_name[rook  ]:=""v"";"
92;1;"	  piece_name[queen ]:=""d"";"
93;1;"	  piece_name[king  ]:=""k"";"
94;0;"	"
95;1;"	  color_name[-1]:=""c"";"
96;1;"	  color_name[ 1]:=""b"";"
97;1;"	  border[ 1]:=1;"
98;1;"	  border[-1]:=8;"
99;0;"	"
100;1;"	  movescount[bishop]:=4; {Bishop moves - 4 directions diagonally}"
101;1;"	  movescount[knight]:=8; {Knight moves - 8 ""L"" moves}"
102;1;"	  movescount[rook  ]:=4; {Rook moves   - 4 directions}"
103;1;"	  movescount[queen ]:=8; {Queen moves  - 8 directions}"
104;1;"	  movescount[king  ]:=8; {King moves   - 8 moves}"
105;0;"		"
106;1;"	  i:=bishop;"
107;2;"	  moverel[i][1].x:= -1; moverel[i][1].y:= -1;"
108;2;"	  moverel[i][2].x:= 1;  moverel[i][2].y:= -1;"
109;2;"	  moverel[i][3].x:= -1; moverel[i][3].y:= 1;"
110;2;"	  moverel[i][4].x:= 1;  moverel[i][4].y:= 1;"
111;0;"	"
112;1;"	  i:=knight;"
113;2;"	  moverel[i][1].x:= -1; moverel[i][1].y:= -2;"
114;2;"	  moverel[i][2].x:=1;   moverel[i][2].y:= -2;"
115;2;"	  moverel[i][3].x:= -2; moverel[i][3].y:= -1;"
116;2;"	  moverel[i][4].x:=2;   moverel[i][4].y:= -1;"
117;2;"	  moverel[i][5].x:= -2; moverel[i][5].y:=1;"
118;2;"	  moverel[i][6].x:=2;   moverel[i][6].y:=1;"
119;2;"	  moverel[i][7].x:= -1; moverel[i][7].y:=2;"
120;2;"	  moverel[i][8].x:=1;   moverel[i][8].y:=2;"
121;0;"	"
122;1;"	  i:=rook;"
123;2;"	  moverel[i][1].x:= 0;  moverel[i][1].y:= -1;"
124;2;"	  moverel[i][2].x:= -1; moverel[i][2].y:= 0;"
125;2;"	  moverel[i][3].x:= 1;  moverel[i][3].y:= 0;"
126;2;"	  moverel[i][4].x:= 0;  moverel[i][4].y:= 1;"
127;0;"	"
128;1;"	  i:=queen;"
129;2;"	  moverel[i][1].x:= -1; moverel[i][1].y:= -1;"
130;2;"	  moverel[i][2].x:=0;   moverel[i][2].y:= -1;"
131;2;"	  moverel[i][3].x:=1;   moverel[i][3].y:= -1;"
132;2;"	  moverel[i][4].x:= -1; moverel[i][4].y:=0;"
133;2;"	  moverel[i][5].x:=1;   moverel[i][5].y:=0;"
134;2;"	  moverel[i][6].x:= -1; moverel[i][6].y:=1;"
135;2;"	  moverel[i][7].x:=0;   moverel[i][7].y:=1;"
136;2;"	  moverel[i][8].x:=1;   moverel[i][8].y:=1;"
137;0;"	"
138;1;"	  i:=king;"
139;2;"	  moverel[i][1].x:= -1; moverel[i][1].y:= -1;"
140;2;"	  moverel[i][2].x:=0;   moverel[i][2].y:= -1;"
141;2;"	  moverel[i][3].x:=1;   moverel[i][3].y:= -1;"
142;2;"	  moverel[i][4].x:= -1; moverel[i][4].y:=0;"
143;2;"	  moverel[i][5].x:=1;   moverel[i][5].y:=0;"
144;2;"	  moverel[i][6].x:= -1; moverel[i][6].y:=1;"
145;2;"	  moverel[i][7].x:=0;   moverel[i][7].y:=1;"
146;2;"	  moverel[i][8].x:=1;   moverel[i][8].y:=1;"
147;0;"	"
148;1;"	end proc;"
149;0;"	"
150;0;"	def proc UpravNapadanePolicko(f as integer;xn as integer;yn as integer;akce as integer);"
151;0;"	  def f2 as integer;"
152;0;"	"
153;76662;"	  if akce=1 "
154;39513;"	    then gp.attacked[yn][xn]:=gp.attacked[yn][xn] or fig2bit[f]"
155;37149;"	            else gp.attacked[yn][xn]:=gp.attacked[yn][xn] and (-1 xor fig2bit[f]);"
156;0;"	"
157;76662;"	  gp.pieces[f].attacked_cells:=gp.pieces[f].attacked_cells+akce;"
158;0;"	"
159;76662;"	  f2:=gp.board[yn][xn];"
160;76662;"	  if sgn(f2)=0-sgn(f) "
161;6833;"	    then gp.pieces[f].attacked_weight:=gp.pieces[f].attacked_weight+akce*piece_weight[gp.pieces[f2].figtype];"
162;76662;"	        end proc;"
163;0;"	"
164;0;"	{oznaci ktore policka su ohrozovane danou figurkou a spocita kolko ich je}"
165;0;"	{tiez spocita ""silu"" ohrozovanych nepriatelskych figur}"
166;0;"	def proc OznacPolickaFigurky(f as integer;akce as integer);"
167;0;"	  def pce as TPiece;"
168;0;"	  def xn as integer;"
169;0;"	  def yn as integer;"
170;0;"	  def i as integer;"
171;11374;"	  pce:=gp.pieces[f];"
172;14818;"	  if (pce.figtype=pawn) then do"
173;0;"	    {tahy pesiakom   (nevie tahy en-pasant !!!)}"
174;3444;"	    yn:=pce.pos.y-sgn(f);"
175;6888;"	    if (yn>=1) and (yn<=8) then do"
176;3444;"	      xn:=pce.pos.x-1;"
177;6590;"	      if (xn>=1) then UpravNapadanePolicko(f,xn,yn,akce);"
178;3444;"	      xn:=pce.pos.x+1;"
179;6535;"	      if (xn<=8) then UpravNapadanePolicko(f,xn,yn,akce);"
180;0;"	    end;"
181;10589;"	  end else if (pce.figtype=knight) or (pce.figtype=king) then do"
182;0;"	    {tahy jazdcom a kralom su urcene vyctom relativnych pozicii}"
183;2659;"	    for i:=1 to movescount[pce.figtype] do"
184;21272;"	      xn:=pce.pos.x+moverel[pce.figtype][i].x;"
185;21272;"	      yn:=pce.pos.y+moverel[pce.figtype][i].y;"
186;36302;"	      if (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) then UpravNapadanePolicko(f,xn,yn,akce);"
187;0;"	    end for;"
188;10542;"	  end else if (pce.figtype=bishop) or (pce.figtype=rook) or (pce.figtype=queen) then do"
189;0;"	    {tahy strelca,veze a damy su urcene vyctom smerov}"
190;5271;"	    for i:=1 to movescount[pce.figtype] do"
191;31492;"	      xn:=pce.pos.x+moverel[pce.figtype][i].x;"
192;31492;"	      yn:=pce.pos.y+moverel[pce.figtype][i].y;"
193;31492;"	      while (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) do"
194;55395;"	        UpravNapadanePolicko(f,xn,yn,akce);"
195;72879;"	        if gp.board[yn][xn]<>0 then xn:=100;"
196;55395;"	        xn:=xn+moverel[pce.figtype][i].x;"
197;55395;"	        yn:=yn+moverel[pce.figtype][i].y;"
198;0;"	      end;"
199;0;"	    end;"
200;0;"	  end;"
201;11374;"	end proc;"
202;0;"	"
203;0;"	def proc GenerStartPositions;"
204;0;"	  def p as Position;"
205;0;"	  def i as integer;"
206;1;"	  InitVars;"
207;0;"	"
208;0;"	  {initial chess position setup}"
209;0;"	"
210;1;"	  p.pieces[9].figtype:=rook;"
211;1;"	  p.pieces[10].figtype:=knight;"
212;1;"	  p.pieces[11].figtype:=bishop;"
213;1;"	  p.pieces[12].figtype:=queen;"
214;1;"	  p.pieces[13].figtype:=king;"
215;1;"	  p.pieces[14].figtype:=bishop;"
216;1;"	  p.pieces[15].figtype:=knight;"
217;1;"	  p.pieces[16].figtype:=rook;"
218;0;"	"
219;1;"	  for i:=1 to 8 do"
220;8;"	    p.pieces[i].figtype:=pawn;"
221;8;"	    p.pieces[0-i].figtype:=pawn;"
222;8;"	    p.pieces[0-8-i].figtype:=p.pieces[8+i].figtype;"
223;0;"	"
224;24;"	    p.board[1][i]:=0-8-i; p.pieces[-8-i].pos.x:=i; p.pieces[-8-i].pos.y:=1;"
225;24;"	    p.board[2][i]:=0-i;   p.pieces[0-i].pos.x:=i;  p.pieces[0-i].pos.y:=2;"
226;24;"	    p.board[7][i]:=i;     p.pieces[i].pos.x:=i;    p.pieces[i].pos.y:=7;"
227;24;"	    p.board[8][i]:=8+i;   p.pieces[8+i].pos.x:=i;  p.pieces[8+i].pos.y:=8;"
228;0;"	  end for;"
229;1;"	  p.onmove:=1;"
230;1;"	  gp:=p;"
231;1;"	  for i:=1 to 16 do"
232;16;"	    OznacPolickaFigurky(i,1);"
233;16;"	    OznacPolickaFigurky(-i,1);"
234;0;"	  end;"
235;1;"	  p:=gp;"
236;1;"	  NewMove(p,""Start"",0);"
237;1;"	end proc;"
238;0;"	"
239;0;"	{pre zadanu figurku predlzim ohrozovane policka danym smerom}"
240;0;"	def proc Predlz(f as integer;col as integer;line as integer);"
241;0;"	  def xd as integer;"
242;0;"	  def yd as integer;"
243;0;"	  def xn as integer;"
244;0;"	  def yn as integer;"
245;0;"	  def pocet as integer;"
246;3569;"	  xn:=gp.pieces[f].pos.x;"
247;3569;"	  yn:=gp.pieces[f].pos.y;"
248;3569;"	  xd:=sgn(col-xn);"
249;3569;"	  yd:=sgn(line-yn);"
250;3569;"	  xn:=col+xd;"
251;3569;"	  yn:=line+yd;"
252;3569;"	  pocet:=0;"
253;3569;"	  while (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) do"
254;6447;"	    gp.attacked[yn][xn]:=gp.attacked[yn][xn] or fig2bit[f];"
255;6447;"	    pocet:=pocet+1;"
256;8613;"	    if gp.board[yn][xn]<>0 then xn:=100; {nasty trick - exit the while loop}"
257;6447;"	    xn:=xn+xd;"
258;6447;"	    yn:=yn+yd;"
259;0;"	  end while;"
260;3569;"	  gp.pieces[f].attacked_cells:=gp.pieces[f].attacked_cells+pocet;"
261;3569;"	end proc;"
262;0;"	"
263;0;"	{pre zadanu figurku skratim ohrozovane policka danym smerom}"
264;0;"	def proc Skrat(f as integer;col as integer;line as integer);"
265;0;"	  def xd as integer;"
266;0;"	  def yd as integer;"
267;0;"	  def xn as integer;"
268;0;"	  def yn as integer;"
269;0;"	  def pocet as integer;"
270;4754;"	  xn:=gp.pieces[f].pos.x;"
271;4754;"	  yn:=gp.pieces[f].pos.y;"
272;4754;"	  xd:=sgn(col-xn);"
273;4754;"	  yd:=sgn(line-yn);"
274;4754;"	  xn:=col+xd;"
275;4754;"	  yn:=line+yd;"
276;4754;"	  while (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) do"
277;11664;"	    if gp.attacked[yn][xn] and fig2bit[f]=0 then xn:=100"
278;8602;"	    else do"
279;8602;"	      gp.attacked[yn][xn]:=gp.attacked[yn][xn] and (-1 xor fig2bit[f]);"
280;8602;"	      pocet:=pocet+1;"
281;0;"	    end;"
282;10133;"	    xn:=xn+xd;"
283;10133;"	    yn:=yn+yd;"
284;0;"	  end while;"
285;4754;"	  gp.pieces[f].attacked_cells:=gp.pieces[f].attacked_cells-pocet;"
286;4754;"	end proc;"
287;0;"	"
288;0;"	{pre vsetky damy, veze a strelcov, ktore napadalju toto policko, rozsirim ich napadane policka v tom smere}"
289;0;"	        {treba pridat parameter -aka figurka se zdvihla, aby sa attacked_weight figuriek ktore ju ohrozovali zmensilo o jej vahu}"
290;0;"	def proc Zdvihni(col as integer;line as integer);"
291;0;"	  def i as integer;"
292;0;"	  {zistim, ktorym figurkam budem musiet prepocitat ohrozovane policka - strelci, veze a damy}"
293;5824;"	  for i:= -16 to 16 do"
294;192192;"	    if (gp.pieces[i].figtype>=bishop) and (gp.attacked[line][col] and fig2bit[i]<>0) "
295;3569;"	              then Predlz(i,col,line);"
296;0;"	  end;"
297;5824;"	end proc;"
298;0;"	"
299;0;"	{pre vsetky damy, veze a strelcov, ktore napadaju toto policko, zrusim ich dalsie napadane policka v tom smere}"
300;0;"	def proc Poloz(col as integer;line as integer);"
301;0;"	  def i as integer;"
302;0;"	  {zistim, ktorym figurkam budem musiet prepocitat ohrozovane policka - strelci, veze a damy}"
303;5518;"	  for i:= -16 to 16 do"
304;182094;"	    if (gp.pieces[i].figtype>=bishop) and (gp.attacked[line][col] and fig2bit[i]<>0) "
305;4754;"	              then Skrat(i,col,line);"
306;0;"	  end;"
307;5518;"	end proc;"
308;0;"		"
309;0;"	def func Napadana(x as integer;y as integer;s as integer) as integer;"
310;0;"	  def i as integer;"
311;0;"	  def a as integer;"
312;19939;"	  Result:=0;"
313;19939;"	  i:=1;"
314;19939;"	  a:=gp.attacked[y][x];"
315;19939;"	  while i<17 do"
316;237749;"	    if a and fig2bit[i*s]<>0 then do"
317;19939;"	      Result:=i*s;"
318;19939;"	      i:=100;"
319;197871;"	    end else i:=i+1;"
320;0;"	  end while;"
321;19939;"	end func;"
322;0;"	"
323;0;"	def proc Presun(p as position;f as integer;destcol as integer;destline as integer);"
324;0;"	  def pce as TPiece;"
325;0;"	  def dstf as integer;"
326;0;"	  def i as integer;"
327;0;"	  def j as integer;"
328;0;"	  def clr as integer;"
329;0;"	  def curpos as TPoint2D;"
330;0;"	"
331;5518;"	  gp:=p;                 {optimization trick.. access to global var is faster}"
332;5518;"	  pce:=gp.pieces[f];     {this is moved piece}"
333;5518;"	  curpos:=pce.pos;       {an its current position}"
334;0;"	 "
335;5518;"	  dstf:=gp.board[destline][destcol];"
336;0;"	"
337;5824;"	  if dstf<>0 then do   {if something is at destination, pick it up and destroy it}      "
338;306;"	    	    OznacPolickaFigurky(dstf,-1);"
339;306;"	    gp.board[destline][destcol]:=0;"
340;306;"	    Zdvihni(destcol,destline);"
341;306;"	    gp.pieces[dstf].figtype:=0;"
342;306;"	    gp.pieces[dstf].attacked_cells:=0;"
343;306;"	    gp.pieces[dstf].attacked_weight:=0;"
344;0;"	  end;	"
345;0;"	"
346;0;"	  {zodvihnem presuvanu figurku a upravim napadane policka}"
347;5518;"	  OznacPolickaFigurky(f,-1);"
348;5518;"	  gp.board[curpos.y][curpos.x]:=0;"
349;5518;"	  Zdvihni(curpos.x,curpos.y);"
350;0;"	"
351;0;"	  {polozim ju na nove miesto}"
352;5518;"	  gp.board[destline][destcol]:=f;"
353;5518;"	  gp.pieces[f].pos.x:=destcol;"
354;5518;"	  gp.pieces[f].pos.y:=destline;"
355;0;"	"
356;0;"	  {ak je to pesiak a dosiel som na posledny riadok, tak z neho urobim kralovnu}"
357;5518;"	  if (pce.figtype=pawn) and ((destline=1) or (destline=8)) then do"
358;0;"	    gp.pieces[f].figtype:=queen;"
359;0;"	  end;"
360;0;"	"
361;0;"	  {oznacim ohrozovane policka presuvanej figurky}"
362;5518;"	  OznacPolickaFigurky(f,1);"
363;0;"	"
364;0;"	  {a upravim ohrozovane u dalsich, ktorym je teraz v ceste}"
365;5518;"	  Poloz(destcol,destline);"
366;0;"	"
367;0;"	  {vymenim hracov a zvacsim cislo tahu}"
368;5518;"	  gp.onmove:=0-gp.onmove;"
369;5518;"	  gp.movenr:=gp.movenr+1;"
370;0;"	"
371;0;"	  {zaznacim poznamku k figurke}"
372;6289;"	  if (pce.figtype=rook) or (pce.figtype=king) then gp.pieces[f].note:=1 {ak je to veza alebo kral, ze sa hybal}"
373;5460;"	  else if (pce.figtype=pawn) and (abs(pce.pos.y-destline)=2) then gp.pieces[f].note:=gp.movenr; {tah skoku pesiaka}"
374;0;"	"
375;5518;"	  if drawMoves then DrawBitmap(""frame2"",destcol*40-34,destline*40-35);"
376;0;"	"
377;0;"	{"
378;0;"	  {ak to bola rosada, tak este presuniem vezu}"
379;0;"	  if (pce.type=king) and (abs(pce.pos.column-dest.x)>1) then do"
380;0;"	    if destcol=7 then do"
381;0;"	      gp.board[destline][6]:=16*p.onmove;"
382;0;"	      gp.board[destline][8]:=0;"
383;0;"	      gp.pieces[16*p.onmove].pos.column:=6;"
384;0;"	      regen[16*p.onmove]:=1;"
385;0;"	    end else do"
386;0;"	      gp.board[destline][3]:=9*p.onmove;"
387;0;"	      gp.board[destline][1]:=0;"
388;0;"	      gp.pieces[9*p.onmove].pos.column:=3;"
389;0;"	      regen[9*p.onmove]:=1;"
390;0;"	    end;"
391;0;"	  end;"
392;0;"	"
393;0;"	  {a este spracujem branie en-pasant}"
394;0;"	  if (pce.type=pawn) and (pce.pos.column<>dest.x) and (p.board[dest.y][dest.x]=0) then do"
395;0;"	    gp.pieces[gp.board[pce.pos.line,dest.column]].type=0;"
396;0;"	    regen[gp.board[pce.pos.line,dest.column]]:=1;"
397;0;"	    gp.board[pce.pos.line,dest.column]:=0;"
398;0;"	    for i:=1 to 16 do"
399;0;"	      if ((gp.pieces[i]=bishop) or (gp.pieces[i]=rook) or (gp.pieces[i]=queen)) and"
400;0;"	                 Ohrozuje(TPoint2D(dest.column,pce.pos.line),i) then regen[i]:=1;"
401;0;"	    end;"
402;0;"	    for i:=-16 to -1 do"
403;0;"	      if ((gp.pieces[i]=bishop) or (gp.pieces[i]=rook) or (gp.pieces[i]=queen)) and"
404;0;"	                 Ohrozuje(TPoint2D(dest.column,pce.pos.line),i) then regen[i]:=1;"
405;0;"	    end;"
406;0;"	  end;"
407;0;"	}"
408;0;"	"
409;0;"	"
410;5518;"	  gp.gama:=0;"
411;5518;"	  for i:= -16 to 16 do"
412;182094;"	    pce:=gp.pieces[i];"
413;354587;"	    if pce.figtype<>0 then do"
414;0;"	      {pripocitam pocet ohrozovanych policok + pieces_weight*typ danej figurky}"
415;172493;"	      gp.gama:=gp.gama+(pce.attacked_cells+pieces_weight*piece_weight[pce.figtype])*sgn(i);"
416;0;"	"
417;0;"	      {pre pesiakov pripocitam pocet krokov*1}"
418;258026;"	      if pce.figtype=pawn then gp.gama:=gp.gama+pawn_weight*(7-abs(border[sgn(i)]-pce.pos.y))*sgn(i);"
419;0;"	"
420;0;"	      {zistim, ci je figurka ohrozovana}"
421;197136;"	      if gp.attacked[pce.pos.y][pce.pos.x] and color2bit[0-sgn(i)]<>0 then do"
422;0;"	"
423;0;"	        {zistim, ci je chranena}"
424;44582;"	        if gp.attacked[pce.pos.y][pce.pos.x] and color2bit[sgn(i)]<>0 then do"
425;0;"	          {ano=>zistim, ktorou najmensou figurkou je napadana}"
426;19939;"	          j:=Napadana(pce.pos.x,pce.pos.y,0-sgn(i));"
427;0;"	          {odpocitam attack_weight*rozdiel napadnutej a utociacej figurky}"
428;19939;"	          gp.gama:=gp.gama-attack_weight*maxf(0,piece_weight[pce.figtype]-piece_weight[gp.pieces[j].figtype])*sgn(i);"
429;0;"	        end else"
430;0;"	          {nie=>odpocitam attack_weight*typ napadnutej figurky}"
431;4704;"	          gp.gama:=gp.gama-attack_weight*piece_weight[pce.figtype]*sgn(i);"
432;0;"	      end;"
433;0;"		"
434;0;"	    end;"
435;0;"	  end for;"
436;0;"	"
437;0;"	  {pripocitam nahodne cislo, aby to nehralo stale rovnako}"
438;5518;"	  gp.gama:=gp.gama+addRandomWeight*(rndf(2)-1);"
439;0;"	"
440;5518;"	  p:=gp;"
441;0;"	"
442;0;"	  {overim, ci je ohrozovany kral hraca, ktory urobil tah}"
443;5518;"	  pce:=p.pieces[0-13*p.onmove];"
444;0;"	  {ak je, tak to nieje platna pozicia}"
445;10770;"	  if p.attacked[pce.pos.y][pce.pos.x] and color2bit[p.onmove]=0 then do"
446;5252;"	    p.name:=piece_name[p.pieces[f].figtype]+"" ""+SubStr(""ABCDEFGH"",curpos.x,1)+IntToStr(9-curpos.y)+"":""+SubStr(""ABCDEFGH"",destcol,1)+IntToStr(9-destline);"
447;5252;"	    NewMove(p,p.name,p.onmove*p.gama);"
448;0;"	  end;"
449;5518;"	end proc;"
450;0;"	"
451;0;"	def proc TahFigurkou(p as position;f as integer);"
452;0;"	          def pce as TPiece;"
453;0;"	  def xn as integer;"
454;0;"	  def yn as integer;"
455;0;"	  def i as integer;"
456;2462;"	  pce:=p.pieces[f];"
457;0;"	"
458;0;"	{"
459;0;"	  for each o from pce.attacked do"
460;0;"	    {v hrozbach su sikme tahy pesiakov, ale tam mozu ist, len ked vyhodia figurku}"
461;0;"	    if (pce.type<>pawn) or (p.board[o.y][o.x]<>0) then Presun(p,f,o)"
462;0;"	    {este skusim, ci to je branie en-pasant}"
463;0;"	    else if (p.pieces[p.board[pce.pos.line,o.column]].type=1) and"
464;0;"	                    (p.pieces[p.board[pce.pos.line,o.column]].note=p.movenr-1) then Presun(p,f,o);"
465;0;"	  end for;"
466;0;"	}"
467;3681;"	  if (pce.figtype=pawn) then do"
468;0;"	    {tahy pesiakom   (nevie tahy en-pasant !!!)}"
469;1219;"	    yn:=pce.pos.y-sgn(f);"
470;2438;"	    if (yn>=1) and (yn<=8) then do"
471;1219;"	      xn:=pce.pos.x-1;"
472;1245;"	      if (xn>=1) and (sgn(p.board[yn][xn])=0-p.onmove) then Presun(p,f,xn,yn);"
473;1219;"	      xn:=pce.pos.x+1;"
474;1236;"	      if (xn<=8) and (sgn(p.board[yn][xn])=0-p.onmove) then Presun(p,f,xn,yn);"
475;0;"	"
476;0;"	      {skusim krok}"
477;1219;"	      xn:=pce.pos.x;"
478;2055;"	      if p.board[yn][xn]=0 then do"
479;836;"	        Presun(p,f,xn,yn);"
480;0;"	"
481;0;"	        {skusim este skok o 2}"
482;836;"	        yn:=yn-sgn(f);"
483;1549;"	        if (abs(pce.pos.y-border[p.onmove])=6) and (p.board[yn][xn]=0) then Presun(p,f,xn,yn);"
484;0;"	      end;"
485;0;"	    end;"
486;1712;"	  end else if (pce.figtype=knight) or (pce.figtype=king) then do"
487;0;"	    {tahy jazdcom a kralom su urcene vyctom relativnych pozicii}"
488;469;"	    for i:=1 to movescount[pce.figtype] do"
489;3752;"	      xn:=pce.pos.x+moverel[pce.figtype][i].x;"
490;3752;"	      yn:=pce.pos.y+moverel[pce.figtype][i].y;"
491;3752;"	      if (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) and"
492;1313;"	         (sgn(p.board[yn][xn])<>p.onmove) then Presun(p,f,xn,yn);"
493;0;"	    end for;"
494;1548;"	  end else if (pce.figtype=bishop) or (pce.figtype=rook) or (pce.figtype=queen) then do"
495;0;"	    {tahy strelca,veze a damy su urcene vyctom smerov}"
496;774;"	    for i:=1 to movescount[pce.figtype] do"
497;3724;"	      xn:=pce.pos.x+moverel[pce.figtype][i].x;"
498;3724;"	      yn:=pce.pos.y+moverel[pce.figtype][i].y;"
499;3724;"	      while (xn>=1) and (xn<=8) and (yn>=1) and (yn<=8) and"
500;0;"	            (sgn(p.board[yn][xn])<>p.onmove) do"
501;2613;"	        Presun(p,f,xn,yn);"
502;2830;"	        if sgn(p.board[yn][xn])<>0 then xn:=100;"
503;2613;"	        xn:=xn+moverel[pce.figtype][i].x;"
504;2613;"	        yn:=yn+moverel[pce.figtype][i].y;"
505;0;"	      end;"
506;0;"	    end;"
507;0;"	  end;"
508;0;"	{"
509;0;"	  {a este rosady...}"
510;0;"	  if (pce.type=king) and (pce.note=0) then do"
511;0;"	    {skusim malu rosadu (doprava)}"
512;0;"	    if not JeOhrozene(TPoint2D(pce.line,5)) and"
513;0;"	       (p.board[pce.line][6]=0) and not JeOhrozene(TPoint2D(6,pce.line)) and"
514;0;"	       (p.board[pce.line][7]=0) and not JeOhrozene(TPoint2D(7,pce.line)) and"
515;0;"	       (pieces[p.onmove*16].type=4) and not JeOhrozene(TPoint2D(8,pce.line)) and"
516;0;"	       (pieces[p.onmove*16].note=0)"
517;0;"	            then Presun(p,f,TPoint2D(7,pce.line));"
518;0;"	"
519;0;"	    {a este velku rosadu (dolava)}"
520;0;"	    if not JeOhrozene(TPoint2D(pce.line,5)) and"
521;0;"	       (p.board[pce.line][4]=0) and not JeOhrozene(TPoint2D(4,pce.line)) and"
522;0;"	       (p.board[pce.line][3]=0) and not JeOhrozene(TPoint2D(3,pce.line)) and"
523;0;"	       (p.board[pce.line][2]=0) and not JeOhrozene(TPoint2D(2,pce.line)) and"
524;0;"	       (pieces[p.onmove*9].type=4) and not JeOhrozene(TPoint2D(1,pce.line)) and"
525;0;"	       (pieces[p.onmove*9].note=0)"
526;0;"	            then Presun(p,f,TPoint2D(2,pce.line));"
527;0;"	  end;"
528;0;"	}"
529;2462;"	end proc;"
530;0;"	"
531;0;"	def proc GenerPositions(p as position);"
532;0;"	  def i as integer;"
533;157;"	  for i:=1 to 16 do"
534;4974;"	    if p.pieces[p.onmove*i].figtype<>0 then TahFigurkou(p,p.onmove*i);"
535;0;"	  end for;"
536;157;"	end proc;"
537;0;"	"
538;0;"	def proc DisplayPosition(p as Position);"
539;0;"	  def l as integer;"
540;0;"	  def c as integer;"
541;0;"	  def f as integer;"
542;0;"	  def s as string;"
543;17;"	  gp:=p;"
544;17;"	  DrawBitmap(""chessbrd"",0,0);"
545;17;"	  for l:=1 to 8 do"
546;136;"	    for c:=1 to 8 do"
547;1621;"	      if p.board[l][c] <> 0 then do"
548;533;"	        DrawBitmap(color_name[sgn(p.board[l][c])]+piece_name[p.pieces[p.board[l][c]].figtype],c*40-34,l*40-35);"
549;0;"	        {DrawText(IntToStr(p.pieces[p.board[l][c]].attacked_cells),c*40-34,l*40-8);}"
550;0;"	      end;"
551;0;"	"
552;0;"	      {"
553;0;"	      s:="""";"
554;0;"	        for f:=1 to 16 do"
555;0;"	        if 0<>(p.attacked[l][c] and fig2bit[f]) then s:=s+piece_name[p.pieces[f].figtype];"
556;0;"	      end for;"
557;0;"	      DrawText(s,c*40-32,l*40-20);"
558;0;"	      s:="""";"
559;0;"	      for f:=1 to 16 do"
560;0;"	        if 0<>(p.attacked[l][c] and fig2bit[-f]) then s:=s+piece_name[p.pieces[-f].figtype];"
561;0;"	      end for;"
562;0;"	      DrawText(s,c*40-32,l*40-34);"
563;0;"	"
564;0;"	      if p.attacked[l][c] and color2bit[0-sgn(p.board[l][c])]<>0 then do"
565;0;"	        {zistim ktorou je napadana}"
566;0;"	        f:=Napadana(c,l,0-sgn(p.board[l][c]));"
567;0;"	        DrawText(piece_name[p.pieces[f].figtype],c*40-14,l*40-20);"
568;0;"	      end;"
569;0;"	      }"
570;0;"	"
571;0;"	    end for;"
572;0;"	  end for;"
573;17;"	end proc;"
574;0;"	"
575;0;"	def func GetPositionByMouse(p as Position;x as integer;y as integer) as string;"
576;0;"	  def h as integer;"
577;0;"	  def v as integer;"
578;0;"	  h:=round((x-6)/40)+1;"
579;0;"	  v:=round((y-6)/40)+1;"
580;0;"	  if (Part<>2) then do"
581;0;"	    if (sgn(p.board[v][h])=p.onmove) then do"
582;0;"	      Part:=2;"
583;0;"	      FirstPart:=piece_name[p.pieces[p.board[v][h]].figtype]+"" ""+SubStr(""ABCDEFGH"",h,1)+IntToStr(9-v);"
584;0;"	      DrawBitmap(""frame"",h*40-34,v*40-35);"
585;0;"	              drawMoves:=true;"
586;0;"	      TahFigurkou(p,p.board[v][h]);"
587;0;"	              drawMoves:=false;"
588;0;"	    end;"
589;0;"	  end else do"
590;0;"	    Part:=1;"
591;0;"	    Result:=FirstPart+"":""+SubStr(""ABCDEFGH"",h,1)+IntToStr(9-v);"
592;0;"	    DisplayPosition(p);"
593;0;"	  end;"
594;0;"	end func;"
595;0;"	"
596;0;"	def func Test(i as integer) as integer;"
597;0;"	  Result:=Abs(i*(-i));"
598;0;"	end func;"
599;0;"	"
